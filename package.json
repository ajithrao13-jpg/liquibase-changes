{
    "name": "mbms-salesforce",
    "Label": "MBMS v6.6",
    "description": "Memorial Benefits Management System (MBMS) module for the Department of Veterans Affairs Salesforce org.",
    "main": "index.js",
    "scripts": {
        "apex:assignSkuidRecordType": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/assignSkuidPagesToRecordType.apex",
        "apex:assignGroups": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/addDevToGroups.apex",
        "apex:createMBMSPersonas": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/createMBMSPersonas.apex",
        "apex:createMBMSUsers": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/createMBMSUsers.apex",
        "apex:insert:MBMSSettings": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/insertMBMSSettings.apex",
        "apex:generateTimeslots": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/generateRandomAvailabilityDataStandardP1.apex && sf apex run --target-org mbms-salesforce --file resources/scripts/apex/generateRandomAvailabilityDataStandardP2.apex ",
        "apex:removeDisableTriggersFlagCustomPermission": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/removeDisableTriggersFlagCustomPermission.apex ",
        "apex:setCannedUsersPassword": "sf apex run --target-org mbms-salesforce --file resources/scripts/apex/setCannedUsersPassword.apex",
        "assign:permsets": "sf org assign permset --name CERRT_App --name CERRT_Cemetery_Director --name CERRT_Cemetery_Representative --name CERRT_Core --name CERRT_District_Director --name DTC_Error_Logging_Permission --name LoggerLogCreator --name LoggerLogViewer --name MBMS_CaseEstablishmentV2 --name MBMS_Core --name MBMS_Doc_App_and_Data --name MBMS_Eligibility_SDocs_User --name MBMS_Metrics_Permissions --name MBMS_NCSO_Supervisor --name MBMS_ProdOps --name SDOC__SDocs_Administrator --name skuid__Skuid_Page_Viewer --name Manage_Sharing_Calculation_Deferral",
        "create:scratch": "sf org create scratch --set-default --alias mbms-salesforce --definition-file config/project-scratch-def.json --duration-days 30 --wait 20",
        "dedupe": "node resources/scripts/node/dedupe.js",
        "delete:scratch": "sf org delete scratch --target-org mbms-salesforce",
        "display:mbms:password": "sf org display user -o testmbmsuser@mbmsscratch.org",
        "generate:manifests": "sf project generate manifest --source-dir mbms-app --name mbms-app-package -d manifest && sf project generate manifest --source-dir mbms-dependencies --name mbms-dependencies-package -d manifest && sf project generate manifest --source-dir mbms-static --name mbms-static-package -d manifest && sf project generate manifest --source-dir mbms-devops --name mbms-devops-package -d manifest",
        "get:orgUrl": "sf org open -r",
        "import:testData": "sf texei data import --inputdir data/scratchOrgDataSeeding --target-org mbms-salesforce",
        "install:dep": "sf toolbox package dependencies install",
        "install:skuid": "echo y | sf plugins:install skuid-sfdx",
        "install:texei": "echo y | sf plugins install texei-sfdx-plugin",
        "install:toolbox": "echo y | sf plugins install @dx-cli-toolbox/sfdx-toolbox-package-utils",
        "lint": "npm run lint:lwc && npm run lint:aura",
        "lint:aura": "eslint **/aura/**",
        "lint:lwc": "eslint **/lwc/**",
        "open": "sf org open",
        "prettier": "prettier",
        "pull": "sf project retrieve start -w 5",
        "pull:force": "sf project retrieve start -w 5 --ignore-conflicts",
        "push": "sf project deploy start --target-org mbms-salesforce --source-dir mbms-app/main/default --verbose -w 20",
        "push:dependencies": "sf project deploy start --target-org mbms-salesforce --source-dir mbms-dependencies/main/default --ignore-conflicts",
        "push:devops": "sf project deploy start --target-org mbms-salesforce --source-dir mbms-devops/main/default/ --ignore-conflicts",
        "push:force": "sf project deploy start --target-org mbms-salesforce --source-dir mbms-app/main/default -w 20 --ignore-conflicts",
        "push:skuid": "sf skuid:page:push --dir skuid/pages",
        "push:static": "sf project deploy start --target-org mbms-salesforce --source-dir mbms-static/main/default --ignore-conflicts",
        "scan": "sfdx scanner:run --target \"mbms-app\" --engine \"eslint-lwc,pmd\" --normalize-severity --category \"Security,ECMAScript6,Possible Errors\"",
        "scan:export": "sfdx scanner:run --target \"mbms-app\" -o \"sfScannerResult.csv\" -f csv --engine \"eslint-lwc,pmd\" --normalize-severity --category \"Security,ECMAScript6,Possible Errors\"",
        "sdocs:export": "node resources/scripts/node/exportSdocsTemplate.js",
        "sdocs:injectRecordTypeId": "node resources/scripts/node/injectSdocsRecordTypeId.js",
        "sdocs:query:recordTypeId": "sf data query --query \"Select Id FROM RecordType WHERE Name = 'MBMS' AND SObjectType = 'SDOC__SDTemplate__c'\" --output-file sdocsRecordTypeId.csv --result-format json",
        "sdocs:upsertAll": "npm run sdocs:query:recordTypeId && npm run sdocs:injectRecordTypeId && node resources/scripts/node/upsertSdocs.js",
        "test": "echo \"Error: no test specified\" && exit 1",
        "test:apex:MBMS": "sf apex run test --suite-names MBMS_TestSuite --code-coverage --detailed-coverage --wait 20",
        "test:unit": "lwc-jest",
        "test:unit:skip": "lwc-jest --skipApiVersionCheck",
        "test:unit:watch": "lwc-jest --watch",
        "test:unit:debug": "lwc-jest --debug",
        "test:unit:coverage": "lwc-jest --coverage --coverageReporters=json-summary",
        "setup:dev:local": "node resources/scripts/node/writeTime.js && npm install && npm run install:toolbox && npm run install:skuid && npm run install:texei && npm run create:scratch && npm run install:dep && npm run push:skuid && npm run push:dependencies && npm run push:force && npm run push:devops && npm run push:static && npm run assign:permsets && npm run apex:assignGroups && npm run apex:insert:MBMSSettings && npm run import:testData && npm run apex:createMBMSPersonas && npm run apex:createMBMSUsers && npm run apex:generateTimeslots && npm run apex:assignSkuidRecordType && npm run apex:setCannedUsersPassword && npm run apex:removeDisableTriggersFlagCustomPermission && npm run sdocs:upsertAll && npm run get:orgUrl && node resources/scripts/node/buildSuccess.js",
        "setup:dev:ci": "npm install && npm run install:toolbox && npm run install:skuid && npm run install:texei && npm run install:dep && npm run push:skuid && npm run push:dependencies && npm run push:force && npm run push:devops && npm run push:static && npm run assign:permsets && npm run apex:assignGroups && npm run apex:insert:MBMSSettings && npm run import:testData && npm run apex:createMBMSPersonas && npm run apex:createMBMSUsers && npm run apex:generateTimeslots && npm run apex:assignSkuidRecordType && npm run apex:setCannedUsersPassword && npm run apex:removeDisableTriggersFlagCustomPermission && npm run sdocs:upsertAll",
        "setup:dev:lowerSandbox": "npm install && npm run install:toolbox && npm run install:skuid && npm run install:texei && npm run install:dep && npm run push:skuid && npm run push:dependencies && npm run push:force && npm run push:devops && npm run push:static && npm run assign:permsets && npm run apex:assignGroups && npm run apex:insert:MBMSSettings && npm run import:testData && npm run apex:createMBMSPersonas && npm run apex:createMBMSUsers && npm run apex:generateTimeslots && npm run apex:assignSkuidRecordType && npm run apex:setCannedUsersPassword && npm run apex:removeDisableTriggersFlagCustomPermission && npm run sdocs:upsertAll",
        "setup:dev:higherSandbox": "npm install && npm run install:toolbox && npm run install:skuid && npm run install:texei && npm run install:dep && npm run push:skuid && npm run push:dependencies && npm run push:force && npm run push:devops && npm run push:static && npm run assign:permsets && npm run apex:assignGroups && npm run apex:insert:MBMSSettings && npm run import:testData && npm run apex:createMBMSPersonas && npm run apex:createMBMSUsers && npm run apex:generateTimeslots && npm run apex:assignSkuidRecordType && npm run apex:setCannedUsersPassword && npm run apex:removeDisableTriggersFlagCustomPermission && npm run sdocs:upsertAll"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/department-of-veterans-affairs/mbms-salesforce.git"
    },
    "author": "Booz Allen Hamilton",
    "license": "UNLICENSED",
    "bugs": {
        "url": "https://github.com/department-of-veterans-affairs/mbms-salesforce/issues"
    },
    "homepage": "https://github.com/department-of-veterans-affairs/mbms-salesforce#readme",
    "devDependencies": {
        "@lwc/eslint-plugin-lwc": "^2.0.1",
        "@salesforce/eslint-config-lwc": "^3.7.1",
        "@salesforce/eslint-plugin-lightning": "^1.0.0",
        "@salesforce/sfdx-lwc-jest": "^7.0.1",
        "@salesforce/sfdx-scanner": "^4.12.0",
        "eslint": "^8.57.0",
        "eslint-plugin-import": "^2.32.0",
        "eslint-plugin-jest": "^29.0.1",
        "node": "^22.17.0",
        "prettier": "3.6.2",
        "prettier-plugin-apex": "2.2.6"
    },
    "dependencies": {}
}
